<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChangePasswordButton" xml:space="preserve">
    <value>Changer votre mot de passe</value>
  </data>
  <data name="ConfirmNewPasswordLabel" xml:space="preserve">
    <value>Confirmation du nouveau mot de passe</value>
  </data>
  <data name="ConfirmReset" xml:space="preserve">
    <value>Il n'est pas possible de récupérer votre mot de passe mais il peut être réinitialisé. Tous vos fichiers protégés seront alors supprimés afin d'en empêcher l'accès à quiconque ne possédant pas un mot de passe valide. Etes-vous sûr de vouloir continuer? (La lecture en cours sera également interrompue)</value>
  </data>
  <data name="CurrentPasswordLabel" xml:space="preserve">
    <value>Mot de passe actuel</value>
  </data>
  <data name="DefinedPasswordRequired" xml:space="preserve">
    <value>Un mot de passe doit être défini avant de commencer à utiliser le mode protégé</value>
  </data>
  <data name="DisableButton" xml:space="preserve">
    <value>Désactiver le mode protégé</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Désactivé</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Activé</value>
  </data>
  <data name="ForgotPasswordButton" xml:space="preserve">
    <value>Mot de passe oublié?</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Mot de passe invalide</value>
  </data>
  <data name="NewPasswordLabel" xml:space="preserve">
    <value>Nouveau mot de passe</value>
  </data>
  <data name="PasswordConfirmationFailed" xml:space="preserve">
    <value>Le mot de passe actuel est invalide, le nouveau mot de passe est invalide ou ne correspond pas à celui de confirmation</value>
  </data>
  <data name="PasswordResetSuccess" xml:space="preserve">
    <value>Votre mot de passe a été réinitialisé avec succès</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Mode protégé</value>
  </data>
  <data name="TitleNew" xml:space="preserve">
    <value>Nouveau mot de passe</value>
  </data>
  <data name="TurnOffProtectedModeLabel" xml:space="preserve">
    <value>Désactiver le mode protégé vous permet :
- de cacher les medias protégés</value>
  </data>
  <data name="TurnOnProtectedModeLabel" xml:space="preserve">
    <value>Activer le mode protégé vous permet :
- de dévoiler les medias protégés
- de marquer des medias en tant que protégés (pour ce faire appuyez sur le média désiré et activez la protection)</value>
  </data>
  <data name="UnlockLabel" xml:space="preserve">
    <value>Veuillez saisir votre mot de passe, le mode protégé se débloque dès que le mot de passe saisi est valide</value>
  </data>
</root>